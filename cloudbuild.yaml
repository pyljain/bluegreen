steps:
- name: mirror.gcr.io/library/golang
  env:
  - GOOS=linux
  - CGO_ENABLED=0
  args: ['go', 'build', '-o', 'server' ]
- name: 'gcr.io/cloud-builders/docker'
  # args: ['build', '-t', 'payaljain/bluegreen-go:v$BUILD_ID', '.']
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/bluegreen-go:v$BUILD_ID', '.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/bluegreen-go:v$BUILD_ID']
- name: 'ubuntu'
  args: ['sed', '-i', 's|PROJECT_ID|$PROJECT_ID|g', './k8s/deployment.yaml']
- name: 'ubuntu'
  args: ['sed', '-i', 's|BUILD_ID|$BUILD_ID|g', './k8s/deployment.yaml']
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: bash
  args:
  - -c
  - |
    /builder/kubectl.bash get svc/sample-go-service --template="{{ .spec.selector.slot }}" > /workspace/slot.txt
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=poc-k-fundamentals'
- name: 'ubuntu'
  args: ['sed', '-i', 's|PROJECT_ID|$PROJECT_ID|g', './k8s/deployment.yaml']
  entrypoint: 'bash'
  args:
  - -c
  - |
    cat /workspace/slot.txt
    _SLOT=$(cat /workspace/slot.txt)
    echo "Slot is $_SLOT"
    if [ "$_SLOT" == "blue" ]
    then
      sed -i "s|SLOT_ID|green|g" ./k8s/deployment.yaml
    else
      sed -i "s|SLOT_ID|blue|g" ./k8s/deployment.yaml
    fi
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', './k8s/']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=poc-k-fundamentals'

